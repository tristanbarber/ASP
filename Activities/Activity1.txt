# Case 1: Output Redirection

int pid = fork();

if (pid == 0) {
    int fd = open(file, O_WRONLY | O_CREAT | O_TRUNC, 0644);
    dup2(fd, STDOUT_FILENO);
    execl(prog, prog, args..., NULL);
}

waitpid(pid, NULL, 0);

#########################################################################################

Case 2: Input Redirection

int pid = fork();

if (pid == 0) {
    int fd = open(file, O_WRONLY | O_CREAT | O_TRUNC, 0644);
    dup2(fd, STDIN_FILENO);
    execl(prog, prog, args..., NULL);
}

waitpid(pid, NULL, 0);

#########################################################################################

Case 3: Pipe

int prog1_pid, prog2_pid;
int pfd[2];

pipe(pfd);

prog1_pid = fork();
if (prog1_pid == 0) {
    close(pfd[0]);
    dup2(pfd[1], STDOUT_FILENO);
    execl(prog1, prog1, args1..., NULL);
}

prog2_pid = fork();
if (prog2_pid == 0) {
    close(pfd[1]);
    dup2(pfd[0], STDIN_FILENO);
    execl(prog2, prog2, args2..., NULL);
}

close(pfd[0]);
close(pfd[1]);

waitpid(prog1_pid, NULL, 0);
waitpid(prog2_pid, NULL, 0);

#########################################################################################

Case 4: Sequential

int prog1_pid, prog2_pid;

prog1_pid = fork();
if (prog1_pid == 0) {
    execl(prog1, prog1, args1..., NULL);
}

waitpid(prog1_pid, NULL, 0);

prog2_pid = fork();
if (prog2_pid == 0) {
    execl(prog2, prog2, args2..., NULL);
}

waitpid(prog2_pid, NULL, 0);

#########################################################################################

Case 5: Conditional AND

int prog1_pid, prog2_pid;

prog1_pid = fork();
if (prog1_pid == 0) {
    execl(prog1, prog1, args1..., NULL);
}

int status;
waitpid(prog1_pid, &status, 0);

if(WIFEXITED(status)) {
    prog2_pid = fork();
    if (prog2_pid == 0) {
        execl(prog2, prog2, args2..., NULL);
    }

    waitpid(prog2_pid, NULL, 0);
}

#########################################################################################

Case 5: Conditional OR

int prog1_pid, prog2_pid;

prog1_pid = fork();
if (prog1_pid == 0) {
    execl(prog1, prog1, args1..., NULL);
}

int status;
waitpid(prog1_pid, &status, 0);

if(WEXITSTATUS(status) == 0) {
    prog2_pid = fork();
    if (prog2_pid == 0) {
        execl(prog2, prog2, args2..., NULL);
    }

    waitpid(prog2_pid, NULL, 0);
}

#########################################################################################